<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<groupId>com.a</groupId>
	<artifactId>sa-parent</artifactId>
	<name>sa-parent</name>
	<version>1.0.0-SNAPSHOT</version>
	<description>框架父项目</description>
	<packaging>pom</packaging>

	<modules>
		<module>sa-core</module>
		<module>sa-activiti</module>
		<module>sa-scheduler</module>
		<module>sa-uid</module>
		<module>sa-idempotent</module>
		<module>sa-mongodb</module>
		<module>sa-mvc</module>
		<module>sa-rocketmq</module>
		<module>sa-beetl</module>
		<module>sa-mbg</module>
		<module>sa-multi-datasource</module>
		<module>sa-redis</module>
		<module>sa-oplog</module>
		<module>sa-seata</module>
		<module>sa-processor</module>
	</modules>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<java.version>1.8</java.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <projectdir>${basedir}</projectdir>
		<!-- MyBatis Generator -->
		<!-- Java接口和实体类 -->
		<targetJavaProject>${basedir}/src/main/java</targetJavaProject>
		<templateRootDir>${basedir}/mbg-templates</templateRootDir>
		<projectdir>${basedir}</projectdir>
		<!-- XML生成路径 -->
		<targetResourcesProject>${basedir}/src/main/resources</targetResourcesProject>
		<targetXMLPackage>mapper</targetXMLPackage>
	</properties>

	<!-- 注意： 这里必须要添加， 否者各种依赖有问题  -->
	<repositories>
		<repository>
			<id>spring-milestones</id>
			<name>Spring Milestones</name>
			<url>https://repo.spring.io/libs-milestone</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
	</repositories>

	<distributionManagement>
		<repository>
			<id>central</id>
			<name>Artifactory Release Repository</name>
			<url>
                http://mvn2.diligrp.com/artifactory/libs-release-local
            </url>
		</repository>
		<snapshotRepository>
			<id>central</id>
			<name>Artifactory Snapshot Repository</name>
			<url>
                http://mvn2.diligrp.com/artifactory/libs-snapshot-local
            </url>
		</snapshotRepository>
	</distributionManagement>

<!--		<distributionManagement>-->
<!--			<repository>-->
<!--				<id>central</id>-->
<!--				<name>Nexus Release Repository</name>-->
<!--				<url>-->
<!--					http://127.0.0.1:8081/repository/maven-releases/-->
<!--				</url>-->
<!--			</repository>-->
<!--			<snapshotRepository>-->
<!--				<id>central</id>-->
<!--				<name>Nexus Snapshot Repository</name>-->
<!--				<url>-->
<!--					http://127.0.0.1:8081/repository/maven-snapshots/-->
<!--				</url>-->
<!--			</snapshotRepository>-->
<!--		</distributionManagement>-->

	<profiles>
		<profile>
			<id>local</id>
			<properties>
				<build.profile.id>local</build.profile.id>
			</properties>
		</profile>
		<profile>
			<id>dev</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<build.profile.id>dev</build.profile.id>
			</properties>
		</profile>
		<profile>
			<id>test</id>
			<properties>
				<build.profile.id>test</build.profile.id>
			</properties>
		</profile>
		<profile>
			<id>prod</id>
			<properties>
				<build.profile.id>prod</build.profile.id>
			</properties>
		</profile>
	</profiles>

	<build>
		<!-- 资源文件过滤 -->
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<!-- filtering为true的时候，这时只会排队<excludes>中指定的文件，-->
				<filtering>true</filtering>
				<excludes>
					<exclude>**/*.woff</exclude>
					<exclude>**/*.woff2</exclude>
					<exclude>**/*.ttf</exclude>
				</excludes>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
				<!-- filtering为false的时候，会把<includes>中指定的文件直接拷贝到classpath下
                    filter为true的时候，会先过滤一次，再把includes中的文件拷贝到classpath下-->
				<filtering>false</filtering>
				<includes>
					<include>**/*.woff</include>
					<include>**/*.woff2</include>
					<include>**/*.ttf</include>
				</includes>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.8.1</version>
				<!-- 编译JDK版本 -->
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
					<encoding>UTF-8</encoding>
					<!-- 支持参数名解析 -->
					<parameters>true</parameters>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>3.2.1</version>
				<executions>
					<execution>
						<id>attach-sources</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>versions-maven-plugin</artifactId>
				<version>2.3</version>
				<configuration>
					<generateBackupPoms>false</generateBackupPoms>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<!-- Import dependency management from Spring Boot -->
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-dependencies</artifactId>
				<version>2.3.2.RELEASE</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<!-- Spring Boot 1.3.x and Spring Framework 4.2.x support -->
			<!--<dependency>-->
				<!--<groupId>org.springframework.cloud</groupId>-->
				<!--<artifactId>spring-cloud-dependencies</artifactId>-->
				<!--&lt;!&ndash;<version>Brixton.RELEASE</version>&ndash;&gt;-->
				<!--<version>Finchley.M8</version>-->
				<!--<type>pom</type>-->
				<!--<scope>import</scope>-->
			<!--</dependency>-->
		</dependencies>
	</dependencyManagement>


</project>